@model BLUPESCASTORE.Models.ARTICOLO

@{
    ViewBag.Title = "Articolo";
}
<h2 style="margin-bottom:40px">ARTICOLO:</h2>
<div class="fade-in-right m-3 d-flex" style="min-height: 500px;">
    <div style="width: 50%; height: 50%; flex: 1;">
        <div>
            <img src="~/Content/img/@Html.DisplayFor(model => model.Foto)" style="width: 60%; height: 100%; object-fit: contain;" />
        </div>
    </div>


    <div style="flex: 1;">
        <h1>@Html.DisplayFor(model => model.NomeArticolo)</h1>
        <p>@Html.DisplayFor(model => model.Descrizione)</p>
        @if (Model.Esaurito == true)
        {
            <div class="alert alert-warning">Esaurito</div>
        }
        else
        {
            <div class="card-text">
                <p>Quantità in magazzino: @Html.DisplayFor(model => model.InMagazzino)</p>
                <p class="price">@Html.DisplayFor(model => model.Prezzo)</p>
            </div>
            if (!User.IsInRole("Amministratore"))
            {
                <div class="card-text qta">
                    <span>Qtà</span><h5 class="card-title quantita"><input type="number" min="1" step="1" class="quantity-input" data-id="@Model.IdArticolo" /></h5>
                </div>
                <div id="contBtn">
                    <a href="#" data-id="@Model.IdArticolo" class="OrdinaBtn" style="white-space: nowrap; cursor: pointer;">Aggiungi al carrello</a>
                </div>
            }
        }

        @if (!User.IsInRole("Amministratore"))
        {
            using (Html.BeginForm("AddToPreferitiPost", "Preferiti", FormMethod.Post, new { @class = "add-to-favorites-form", data_idArticolo = Model.IdArticolo }))
            {
                @Html.Hidden("idArticolo", Model.IdArticolo)
                <span style="color: #D3D3D3">AGGIUNGI AI PREFERITI</span><button type="submit" class="btn btn-link" style="color: lightgray;"><i class="Heart fa fa-heart-o fa-2x"></i></button>
            }
        }
    </div>
</div>
<div class="card-text">
    <a href="@Url.Action("Index", "MenuArticolo")" class="btn btn-success">Torna al Negozio</a>
</div>






@if (User.Identity.IsAuthenticated && !User.IsInRole("Amministratore"))
{
    <button onclick="cartFunction()" id="cartBtn" title="Vai al carrello" data-aos="zoom-in">
        <i class="bi bi-cart4"></i> Carrello
        <span class="badge badge-light" id="cart-count" style="background-color: red; color: white;"></span>
    </button>
}

<script>
    /*QUESTO SCRIPT AGGIUNGE E RIMUOVE GLI ARTICOLI DAL DATABASE!!! FUNZIONA TUTTO E NON LO TOCCARE */
    $(document).ready(function () {
        // Ottieni gli articoli preferiti dell'utente al momento del login
        $.get('/Preferiti/GetPreferiti')
            .done(function (preferiti) {
                // Per ogni articolo preferito, attiva il cuoricino corrispondente
                preferiti.forEach(function (idArticolo) {
                    var form = $('.add-to-favorites-form[data-idArticolo="' + idArticolo + '"]');
                    var button = form.find('button');
                    var icon = button.find('i');

                    // Colora l'icona di rosso e rendila piena
                    icon.removeClass('fa-heart-o').addClass('fa-heart');
                    button.css('color', 'red');
                });
            });

        // Carica lo stato dei preferiti per ogni articolo
        $('.add-to-favorites-form').each(function () {
            var form = $(this);
            var button = form.find('button');
            var icon = button.find('i');

            $.get('/Preferiti/IsInPreferiti?idArticolo=' + form.data('idArticolo'))
                .done(function (isFavorited) {
                    if (isFavorited) {
                        // Se l'articolo è nei preferiti, colora l'icona di rosso e rendila piena
                        icon.removeClass('fa-heart-o').addClass('fa-heart');
                        button.css('color', 'red');
                    } else {
                        // Se l'articolo non è nei preferiti, rendi l'icona vuota e grigia
                        icon.removeClass('fa-heart').addClass('fa-heart-o');
                        button.css('color', 'lightgray');
                    }
                });
        });

        // Gestione dell'aggiunta e della rimozione dai preferiti
        $('.add-to-favorites-form').submit(function (e) {
            e.preventDefault();

            var form = $(this);
            var button = form.find('button');
            var icon = button.find('i');

            var isFavorited = icon.hasClass('fa-heart');
            var action = isFavorited ? '/Preferiti/RemoveFromPreferitiPost' : form.attr('action');

            $.post(action, form.serialize())
                .done(function () {
                    if (isFavorited) {
                        // Se l'articolo era nei preferiti, rendi l'icona vuota e grigia
                        icon.removeClass('fa-heart').addClass('fa-heart-o');
                        button.css('color', 'lightgray');
                        sweetAlert("Successo", "Articolo rimosso dai preferiti.", "success");
                    } else {
                        // Se l'articolo non era nei preferiti, colora l'icona di rosso e rendila piena
                        icon.removeClass('fa-heart-o').addClass('fa-heart');
                        button.css('color', 'red');
                        sweetAlert("Successo", "Articolo aggiunto ai preferiti.", "success");
                    }
                })
                .fail(function () {
                    sweetAlert("Errore", "Non è stato possibile aggiornare i preferiti.", "error");
                });
        });
    });</script>




<script>
    function cartFunction() {
        window.location.href = '/Dettaglio/Carrello';
    }</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
$(document).ready(function() {
    $.get('@Url.Action("GetCount", "Dettaglio")', function(data) {
        $('#cart-count').text(data);
    });
});
</script>






<script type="text/javascript">
    $('.categoria-titolo').click(function (event) {
        event.preventDefault();
        var categoria = $(this).data('categoria');
        var cards = $('.card-container[data-categoria="' + categoria + '"] .card');

        if (cards.is(':visible')) {
            cards.hide();
        } else {
            cards.show();
        }

        controllaCard();
    });

    function controllaCard() {
        if ($('.card:visible').length == 0) {
            $('#categorie').addClass('d-flex');
        } else {
            $('#categorie').removeClass('d-flex');
        }
    }

    $(document).ready(function () {
        controllaCard();
    });</script>

@if (!User.IsInRole("Amministratore"))
{
    <button onclick="cartFunction()" id="cartBtn" title="Vai al carrello" data-aos="zoom-in">
        <i class="bi bi-cart4"></i> Carrello
    </button>
}

<script>
    function cartFunction() {
        window.location.href = '/Dettaglio/Carrello';
    }</script>

<script>
// Funzione per aggiornare il conteggio del carrello
function updateCartCount() {
    $.get('@Url.Action("GetCount", "Dettaglio")', function(data) {
        $('#cart-count').text(data);
    });
}

</script>



<script type="text/javascript">//SCRIPT PER AGGIUNGERE GLI ARTICOLI AL CARRELLO
function updateCartIcon() {
    $.get('@Url.Action("GetCount", "Dettaglio")', function(data) {
        $('.cart-count').text(data);
    });
}

$(document).ready(function () {
    var baseUrl = "/Dettaglio/Index/";
    var isAuthenticated = '@User.Identity.IsAuthenticated' === 'True';
    $(".OrdinaBtn").click(function (event) {
        event.preventDefault();
        var id = $(this).data("id");
        var quantity = $(this).parent("#contBtn").siblings(".qta").children(".quantita").children("input").val();
        var inMagazzino = $(this).parent("#contBtn").siblings(".card-text").children("p").text().split(' ')[3]; // Ottieni la quantità in magazzino

        if (!isAuthenticated)
        {
            swal({
                title: "Utente non loggato",
                text: "Effettua il login!",
                icon: "warning",
                button: "OK",
            });
        }
        else if (quantity > inMagazzino) // Verifica se la quantità richiesta supera la quantità disponibile
        {
            swal({
                title: "Quantità non disponibile",
                text: "Stai cercando di aggiungere più articoli di quanti ce ne siano in magazzino.",
                icon: "warning",
                button: "OK",
            });
        }
        else
        {
            $.ajax({
                url: baseUrl,
                type: "GET",
                data: { id: id, quantity: quantity },
                success: function (response) {
                    swal("Fatto!", "Articolo aggiunto con successo!", "success");
                    $('.card-text.qta').find('input').val('');
                    // Aggiorna il conteggio del carrello
                    updateCartCount();
                    // Aggiorna l'icona del carrello nella navbar
                    updateCartIcon();
                },
                error: function (xhr, status, error) {
                    swal("Errore!", "Errore in fase di aggiunta articolo: " + error, "error");
                }
            });
        }
    });
});


</script>

<script>
    $(window).scroll(function () {
        if ($(this).scrollTop() > 100) { // Imposta la posizione da cui inizia lo scrolling
            $('#menuCategorie').addClass('fixed');
        } else {
            $('#menuCategorie').removeClass('fixed');
        }
    });</script>



<script type="text/javascript">
    $(document).ready(function () {
        $('.fade-in-right').addClass('animated fadeInRight');
    });</script>


<script>
    $(window).scroll(function () {
        var footerTop = $('#footer').offset().top; // Ottieni la posizione del footer
        var categoryBottom = $('#menuCategorie').offset().top + $('#menuCategorie').height(); // Ottieni la posizione inferiore della colonna delle categorie

        if (categoryBottom > footerTop) {
            $('#menuCategorie').css('position', 'static'); // Cambia la posizione in static quando la colonna delle categorie raggiunge il footer
        } else {
            $('#menuCategorie').css('position', 'fixed'); // Altrimenti, rendi la posizione fixed
        }
    });</script>

